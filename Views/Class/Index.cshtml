@model PaginatedList<Fochso.Models.Class.ClassViewModel>
@{
    ViewData["Title"] = "Class List";
    int count = 1;
}

@await Html.PartialAsync("_ListAlert", Model)

<div>
    <a asp-controller="Class" asp-action="Create">Add New Class</a>
</div>

<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by name: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Search" class="btn btn-default" /> |
            <a asp-action="Index">Back to Full List</a>
        </p>
    </div>
</form>
@if (Model is not null)
{
    <table class="table">
        <thead>
            <tr>
                <th scope="col">S/N</th>
                <th scope="col"><a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Class Name</a></th>
            <th scope="col"><a asp-action="Index" asp-route-sortOrder="@ViewData["DateSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Class Description</a></th>
                <th scope="col">Action</th>
            </tr>
        </thead>

        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <th scope="row">@count</th>
                    <td scope="row">@item.Name</td>
                    <td scope="row">@item.Description</td>
                    <td scope="row">
                        <div class="btn-group">
                            <a asp-controller="Class" asp-action="GetClass" asp-route-id="@item.Id" class="btn btn-primary">View</a>
                        </div>
                    </td>
                </tr>
                count++;
            }
        </tbody>
    </table>
    
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
    

    <a asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-pageNumber="@(Model.PageIndex - 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-default @prevDisabled">
        Previous
    </a>
    <a asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-pageNumber="@(Model.PageIndex + 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-default @nextDisabled">
        Next
    </a>
}

